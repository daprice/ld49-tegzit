html {
	background-color: #111;
	color: white;
}

.fullScreenModal {
	height: 100vh;
	width: 100vw;
	line-height: 1.5em;
	display: flex;
	flex-direction: column;
	justify-content: center;
	position: absolute;
	top: 0px;
	left: 0px;
	background-color: #111;
}
.fullScreenModal > * {
	width: 40rem;
	margin-left: auto;
	margin-right: auto;
}
.fullScreenModal h2 {
	text-align: center;
}
.fullScreenModalButton {
	text-align: center;
}
.acceptContentWarning {
	font-size: 1.6rem;
}

.orange {
	color: darkorange;
}
.purple {
	color: mediumpurple;
}

.currency::before {
	content: "$";
}
.temperature::before {
	content: "❄️ ";
}
.temperature::after {
	content: " °F";
}
.gridStability::after {
	content: "%"
}

.value {
	font-variant-numeric: tabular-nums;
}

.positiveChange {
	font-weight: bold;
	color: lawngreen;
	display: none;
}
.positiveChange::before {
	content: "(+"
}
.positiveChange::after {
	content: "%)"
}

.negativeChange {
	font-weight: bold;
	color: darkred;
	display: none;
}
.negativeChange::before {
	content: "(-"
}
.negativeChange::after {
	content: "%)"
}

.gameplayUI {
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: stretch;
	width: 80ch;
	
	margin: 1em auto;
}
.gameplayUI * {
	max-width: 80ch;
}

.uiSection {
	background-color: #333;
	border: 1px solid white;
	padding: 0em 1em;
}

.statusBar {
	display: flex;
	justify-content: space-between;
	align-items: center;
}

.governor {
	display: block;
}

.conditionsBar {
	display: flex;
	justify-content: space-between;
	align-items: baseline;
	align-content: center;
}

.map {
	padding: 0px;
}

.statBar {
	display: flex;
	justify-content: space-between;
}

.dollarAmount::before {
	content: "$";
}

.popApproval::after {
	content: "%";
}


.fadeInOut {
	opacity: 1;
	transition: opacity 1s;
}
[aria-hidden='true'] {
	opacity: 0;
	pointer-events: none;
}

.removed {
	display: none;
}

svg *:not(.region) {
	pointer-events: none;
}

svg .region {
	cursor: pointer;
	fill: lightgreen;
	transition: fill 3s linear;
}

svg .region.cold {
	fill: rgb(71, 167, 165);
}

svg .region:hover {
	opacity: 0.7;
}

svg .region.unpowered {
	stroke: rgba(0,0,0,0.5);
	stroke-width: 4px;
}

svg .region.danger {
	stroke-width: 4px;
	stroke: red;
	animation: 0.25s linear 0s infinite alternate running flashing;
}
@keyframes flashing {
	0% {
		stroke: rgb(255,0,0);
	}
	100% {
		stroke: rgb(0,0,0);
	}
}